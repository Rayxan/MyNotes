O que eu fiz:

Primeiro eu clonei o repositório atual do professor que tá atualizado.

Depois eu coloquei aquela lógica que estávamos desenvolvendo na última reunião com o professor dentro do Interpreter.scala.

Então eu arrumei alguns erros que tinham nela, pro seu funcionamento ficar aceitável pelo compilador.

Com isso, o compilador já não reclamava mais de erros.

Após arrumar esses erros citados acima, eu fui ver como estavam sendo feitos os testes que o professor falou que tínhamos que fazer.

Logo vi que os testes não eram tão difíceis aí comecei a analisar eles e tentar implementar.

Os arquivos que tem que ser implementados os testes são InterpreterTest.scala que fica no diretório : src/test/scala/br/unb/cic/oberon/interpreter/InterpreterTest.scala. (Eu comecei a implementar testes a partir da linha 96, tudo que veio após isso eram testes feitos por outros grupos).

Porém é válido observar que esses testes feitos na InterpreterTest.scala só podem ser feitos se criarmos um arquivo dentro do diretório: src/test/resources/stmts. E esses arquivos que estão citados logo no passo seguinte, estão sendo referenciados na InterpreterTest.scala na linha 97. 

Os arquivos para teste que eu criei até agora foram: 
interpreter_stmt02.oberon
interpreter_stmt03.oberon


Observações: 

-Aquele evalCaseStmt eu retirei do nosso código que estávamos desenvolvendo, pois nesse novo ele não está sendo utilizado em nenhum lugar.

-Pra implementar os testes dentro da InterpreterTest.scala é só olhar como estão sendo feitos os outros e copiar as primeiras 10 linhas que são padrão pra todos os testes (exceto a parte de importar o arquivo .oberon). Exemplo : Compare o teste que eu fiz, da linha 96 até a linha 106, essas linhas se repetem nos outros testes também, alterando somente o arquivo .oberon da linha 97.

-Infelizmente no compilador o RangeCase dentro do Interpreter.scala não está compilando por erros dos operadores relacionais >= e < . Por isso eu comentei essa parte e já comecei logo a fazer os testes, pois aí poderemos pedir ajuda ao professor por e-mail logo mais, caso não avancemos nessa parte.  

-Caso não tenha entendido como funcionam os testes, olhe os passos a seguir e veja se te ajudam a compreender: 

1 – Fiz os código de teste em Oberon  de acordo com o que foi implementado no Oberon.g4 (interpreter_stmt02.oberon e etc).

2 – Dentro desses códigos eu fiz variáveis receberem valores após certo expressão.

3 – Dentro do InterpreterTest.scala eu testei esses valores pra ver se o código de teste tava fazendo o que era pra fazer.


Obs2: Pra executar os testes com sbt pelo terminal é só usar os comandos:
sbt
compile
test

Obs3: Acredito que temos que fazer mais testes pra colocar no diretório src/test/resources/procedures , pois lembro do professor comentando sobre fibonacci e esses teste de fibonacci eu achei nesse diretório ai, feitos por outro grupo lá.

Obs4: Os testes estão dando certo, porém eu encontrei um bug no ELSE, sempre que eu faço algum teste que não cumpre as condições do case e passa pro ELSE que é o default, o que tem no ELSE não acontece e da erro no teste.

Obs5: No teste do interpreter_stmt03.oberon eu notei que tá atribuindo os valores quando passam em uma das condições e também atribui quando passa no default, isso não é pra acontecer ao meu ver, mas eu posso estar enganado. (com isso a Obs4 cai por terra, pois o eles funciona nesse teste do interpreter_stmt03).
